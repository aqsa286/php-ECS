---
- name: Deploy ECS Task and Service with EC2
  hosts: localhost
  gather_facts: False
  vars:
    aws_region: "us-east-1"
    ecs_cluster_name: "DevCluster-1"
    ecs_task_definition_name: "ansible-task-definition"
    ecs_service_name: "ansible-ecs-service"
    ecs_container_name: "ansible_php"
    ecs_container_image: "php:latest"
  tasks:
    - name: Ensure boto3 is installed
      pip:
        name: boto3
        state: present
    
    - name: Ensure botocore is installed
      pip:
        name: botocore
        state: present

    - name: Create ECS Cluster
      ecs_cluster:
        name: "{{ ecs_cluster_name }}"
        region: "{{ aws_region }}"
        state: present
      ignore_errors: yes  # Ignore errors if the cluster already exists

    - name: Create ECS Task Definition
      ecs_taskdefinition:
        region: "{{ aws_region }}"
        family: "{{ ecs_task_definition_name }}"
        network_mode: awsvpc
        execution_role_arn: "arn:aws:iam::736116236436:role/ecsTaskExecutionRole"
        containers:
          - name: "{{ ecs_container_name }}"
            image: "{{ ecs_container_image }}"
            portMappings:
              - containerPort: 80
            memoryReservation: 100
            memory: 250
            cpu: 100
        state: present
      register: task_definition

    - name: Register ECS Task Definition
      debug:
        var: task_definition

    - name: Create ECS Service
      ecs_service:
        region: "{{ aws_region }}"
        cluster: "{{ ecs_cluster_name }}"
        service: "{{ ecs_service_name }}"
        task_definition: "{{ ecs_task_definition_name }}"
        launch_type: EC2
        desired_count: 1  # Set the desired count to 1 to start one task
        deployment_configuration:
          maximum_percent: 200
          minimum_healthy_percent: 50
        placement_strategy:
          - type: "spread"
            field: "attribute:ecs.availability-zone"
        placement_constraints:
          - type: "memberOf"
            expression: "attribute:ecs.instance-type =~ t2.*"
        state: present
      register: service_result

    - name: Register ECS Service
      debug:
        var: service_result
